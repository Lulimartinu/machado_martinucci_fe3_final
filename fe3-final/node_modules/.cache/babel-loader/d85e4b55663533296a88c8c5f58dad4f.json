{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luli\\\\OneDrive\\\\Desktop\\\\machado_martinucci_fe3_final\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const themes = {\n  light: {\n    font: 'black',\n    background: 'white'\n  },\n  dark: {\n    font: 'white',\n    background: 'black'\n  }\n};\nconst actionTypes = {\n  SET_THEME: \"SET_THEME\"\n};\nexport const initialState = {\n  theme: \"light\",\n  data: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_THEME:\n      return { ...state,\n        theme: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState); //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const contextValue = useMemo(() => {\n    const toggleTheme = () => {\n      dispatch({\n        type: actionTypes.SET_THEME,\n        payload: state.theme === \"light\" ? \"light\" : \"dark\"\n      });\n    };\n\n    return {\n      state,\n      dispatch,\n      toggleTheme,\n      actionTypes\n    };\n  }, [state, dispatch]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      contextValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"KLvQelNBs/Ld5E3aV0blL/044PQ=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useMemo","themes","light","font","background","dark","actionTypes","SET_THEME","initialState","theme","data","reducer","state","action","type","payload","ContextGlobal","ContextProvider","children","dispatch","contextValue","toggleTheme"],"sources":["C:/Users/Luli/OneDrive/Desktop/machado_martinucci_fe3_final/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useReducer, useMemo } from \"react\";\r\n\r\nexport const themes = {\r\n  light: {\r\n  font: 'black',\r\n  background: 'white'\r\n  },\r\n  dark: {\r\n  font: 'white',\r\n  background: 'black'\r\n  }\r\n  };\r\n\r\nconst actionTypes = {\r\n  SET_THEME: \"SET_THEME\",\r\n};\r\n\r\nexport const initialState = { theme: \"light\", data: [] };\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_THEME:\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext(initialState);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const contextValue = useMemo(() => {\r\n    const toggleTheme = () => {\r\n      dispatch({\r\n        type: actionTypes.SET_THEME,\r\n        payload: state.theme === \"light\" ? \"light\" : \"dark\",\r\n      });\r\n    };\r\n\r\n    return {\r\n      state,\r\n      dispatch,\r\n      toggleTheme,\r\n      actionTypes,\r\n    };\r\n  }, [state, dispatch]);\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{ contextValue }}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,QAAmD,OAAnD;;AAEA,OAAO,MAAMC,MAAM,GAAG;EACpBC,KAAK,EAAE;IACPC,IAAI,EAAE,OADC;IAEPC,UAAU,EAAE;EAFL,CADa;EAKpBC,IAAI,EAAE;IACNF,IAAI,EAAE,OADA;IAENC,UAAU,EAAE;EAFN;AALc,CAAf;AAWP,MAAME,WAAW,GAAG;EAClBC,SAAS,EAAE;AADO,CAApB;AAIA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,IAAI,EAAE;AAAxB,CAArB;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,WAAW,CAACC,SAAjB;MACE,OAAO,EAAE,GAAGK,KAAL;QAAYH,KAAK,EAAEI,MAAM,CAACE;MAA1B,CAAP;;IACF;MACE,OAAOH,KAAP;EAJJ;AAMD,CAPD;;AASA,OAAO,MAAMI,aAAa,gBAAGlB,aAAa,CAACU,YAAD,CAAnC;AAEP,OAAO,MAAMS,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBpB,UAAU,CAACY,OAAD,EAAUH,YAAV,CAApC,CAD+C,CAG/C;;EAEA,MAAMY,YAAY,GAAGpB,OAAO,CAAC,MAAM;IACjC,MAAMqB,WAAW,GAAG,MAAM;MACxBF,QAAQ,CAAC;QACPL,IAAI,EAAER,WAAW,CAACC,SADX;QAEPQ,OAAO,EAAEH,KAAK,CAACH,KAAN,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC;MAFtC,CAAD,CAAR;IAID,CALD;;IAOA,OAAO;MACLG,KADK;MAELO,QAFK;MAGLE,WAHK;MAILf;IAJK,CAAP;EAMD,CAd2B,EAczB,CAACM,KAAD,EAAQO,QAAR,CAdyB,CAA5B;EAgBA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEC;IAAF,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1BM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}